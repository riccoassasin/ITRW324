@model PagedList.IPagedList<WebDocs.DomainModels.Database.FileModel>


@using WebDocs.Common.Helper.Formatters;
@using WebDocs.Common.Interfaces;
@using WebDocs.Common.Enum.SystemLogicEnum;
@using Microsoft.AspNet.Identity;
@using WebDocs.Common.Helper.LinkDecision;
@using PagedList.Mvc;
@{
    ViewBag.Title = "DisplayPrivateFilesSharedWithUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    int UserID_OfUserCurrentlyLoggedIn = User.Identity.GetUserId<int>();
}


<br />
<div class="panel panel-primary">
    <div class="panel-heading"><h2>Privately Shared Documents (Docs shared with you.)</h2></div>
    <div class="panel-body">
        <div class="table-responsive">
            <table class="table table-striped table-hover table-condensed">

                <thead>

                    <tr>
                        <th class="text-nowrap">
                            @Html.ActionLink("Ref#", "DisplayPublicDocs", new { sortOrder = ViewBag.FileIDSortParm, currentFilter = ViewBag.CurrentFilter })
                        </th>
                        <th class="text-nowrap">
                            @Html.ActionLink("File Name", "DisplayPublicDocs", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                        </th>
                        <th class="text-nowrap">
                            @Html.ActionLink("File Size", "DisplayPublicDocs", new { sortOrder = ViewBag.FileSizeSortParm, currentFilter = ViewBag.CurrentFilter })

                        </th>
                        <th class="text-nowrap">
                            @Html.ActionLink("File Owner", "DisplayPublicDocs", new { sortOrder = ViewBag.NameOfFileOwnerSortParm, currentFilter = ViewBag.CurrentFilter })
                        </th>
                        <th class="text-nowrap">
                            @Html.ActionLink("Last Modified By", "DisplayPublicDocs", new { sortOrder = ViewBag.NameOfPersonLastUpdatedBySortParm, currentFilter = ViewBag.CurrentFilter })

                        </th>
                        <th class="text-nowrap">
                            @Html.ActionLink("Created", "DisplayPublicDocs", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
                        </th>
                        <th class="text-nowrap">
                            @Html.ActionLink("File Status", "DisplayPublicDocs", new { sortOrder = ViewBag.CurrentFileStatusSortParm, currentFilter = ViewBag.CurrentFilter })
                        </th>
                        <th class="text-nowrap">
                            @Html.ActionLink("Shared Status", "DisplayPublicDocs", new { sortOrder = ViewBag.CurrentFileShareStatusSortParm, currentFilter = ViewBag.CurrentFilter })
                        </th>
                        <th class="text-nowrap">
                            @Html.ActionLink("Version", "DisplayPublicDocs", new { sortOrder = ViewBag.CurrentVersionNumberSortParm, currentFilter = ViewBag.CurrentFilter })
                        </th>
                        @*<th class="text-nowrap">@Html.Label("Downloaded By")</th>*@
                        <th>@Html.Label("Options")</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        if (Model.Count() > 0)
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td class="text-nowrap text-center">
                                        @Html.DisplayFor(modelItem => item.FileID)
                                    </td>
                                    <td class="text-nowrap">
                                        @Html.DisplayFor(modelItem => item.FullFileName)
                                    </td>
                                    <td class="text-nowrap">
                                        @Html.Label(FileSize.ToFileSize(Convert.ToDouble(item.Size)))
                                    </td>
                                    <td class="text-nowrap">
                                        @Html.DisplayFor(modelItem => item.FileOwner.UserFullName)
                                    </td>
                                    <td class="text-nowrap">
                                        @Html.DisplayFor(modelItem => item.PersonThatLastUpdatedFile.UserFullName)
                                    </td>
                                    <td class="text-nowrap">
                                        @Html.Label(item.Created.ToString("MMMM dd, yyyy"))
                                    </td>
                                    <td class="text-nowrap ">
                                        @Html.DisplayFor(modelItem => item.FileViewStatuses.Status)
                                    </td>
                                    <td class="text-nowrap ">
                                        @Html.DisplayFor(modelItem => item.FileShareStatues.Status)
                                    </td>
                                    <td class="text-nowrap text-center">
                                        @Html.DisplayFor(modelItem => item.CurrentVersionNumber)
                                    </td>

                                    <td>
                                        @{
                                            IDecsions Decision = LinkDecision.GetPublicDocsFileLinkDecsion(item, User.Identity.GetUserId<int>());
                                        }
                                        <table style=" border: none;">
                                            <tr>
                                                <td>
                                                    <a href="javascript:void(0);" onclick="showFileDetails(@item.FileID);" class="btn btn-info btn-sm showHistory">
                                                        <span class="glyphicon glyphicon-list-alt"> History</span>
                                                    </a>
                                                </td>
                                                <td>&nbsp;</td>
                                                <td>
                                                    <div class="text-nowrap">
                                                        @if (Decision != null)
                                                        {
                                                            switch (Decision.FinalDecision)
                                                            {
                                                                case ControlTypes.Download:
                                                                    <a class="btn btn-primary btn-sm btn-block" data-toggle="tooltip" data-placement="top" title="Click To Download File." href="#" onclick="showDownloadNotificationModal(@item.FileID,'@item.FullFileName', @UserID_OfUserCurrentlyLoggedIn )">
                                                                        <span class="glyphicon glyphicon-cloud-download"> Download</span>
                                                                    </a>
                                                                    break;
                                                                case ControlTypes.UploadFileNotification:
                                                                    @*<a class="btn btn-warning btn-sm btn-block" data-toggle="tooltip" data-placement="top" title="Click To Send Notification." href="javascript:void(0);">
                                                                        <span class="glyphicon glyphicon-upload"> Notify-To-Upload</span>
                                                                    </a>*@
                                                                    <a class="btn btn-warning btn-sm btn-block" data-toggle="tooltip" data-placement="top" title="Click To Send Notification." href="javascript:void(0);" onclick="sendUploadNotification(@item.FileID,@UserID_OfUserCurrentlyLoggedIn)">
                                                                        <span class="glyphicon glyphicon-upload"> Notify-To-Upload</span>
                                                                    </a>
                                                                    @*@Html.ActionLink("Notify to Upload", "DownLoadSelectedFile", "DownLoadFile", new { fileID = item.FileID }, null)*@
                                                                    break;

                                                                default:
                                                                    break;

                                                            }
                                                        }
                                                        else
                                                        {
                                                            <div class="alert alert-info">
                                                                <strong>Info!</strong> - No Links To Display!
                                                            </div>

                                                        }
                                                    </div>
                                                </td>
                                                <td>&nbsp;</td>
                                                <td>
                                                    <a href="@Url.Action("UnlinkPrivteSharedFile", "Files", new { UserIDPersonSharedWith = UserID_OfUserCurrentlyLoggedIn, FileID = item.FileID, _sortOrder = ViewBag.CurrentSort, _currentFilter = ViewBag.CurrentFilter, _page = Model.PageNumber })"
                                                       class="btn btn-danger btn-sm showHistory">
                                                        <span class="glyphicon glyphicon-transfer"> Unlink</span>
                                                    </a>
                                                </td>
                                            </tr>

                                        </table>
                                        @*[@Html.ActionLink("History", "Edit", new { /* id=item.PrimaryKey */ })]
                                            [@Html.ActionLink("Download", "Details", new { /* id=item.PrimaryKey */ })]
                                            [@Html.ActionLink("UnList", "Delete", new { /* id=item.PrimaryKey */ })]*@
                                    </td>
                                </tr>
                                <tr></tr>
                                @Html.Partial("_FileDetails", item);
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="9">
                                    <div class="alert alert-info">
                                        <strong>Info!</strong> No Private Files Listed!.<br />
                                        To gain access to files that are private search for the file in the public repository and request access by clicking on the [Request Access] Link!!
                                    </div>
                                </td>
                            </tr>
                        }

                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="10"></td>
                    </tr>
                </tfoot>
            </table>

        </div>
    </div>
    <div class="panel-footer panel-danger">
        <table class="panel-primary">
            <tr>
                <td>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</td>
                <td>&nbsp;</td>
                <td>
                    @Html.PagedListPager(Model, page => Url.Action("DisplayPublicDocs", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                </td>
            </tr>
        </table>
    </div>
</div>
@using (Html.BeginForm("DisplayPrivateFilesSharedWithUser", "Files", new { sortOrder = "", currentFilter = ViewBag.CurrentFilter, page = Model.PageNumber }, FormMethod.Get))
{
    <input type="hidden" id="sortOrder" name="sortOrder" value="@ViewBag.CurrentSort" />
    <input type="hidden" id="currentFilter" name="currentFilter" value="@ViewBag.CurrentFilter" />

    <input type="hidden" id="page" name="page" value="@Model.PageNumber" />

    <input type="submit" id="btnRefreshPage" value="" style="display:none" />
}
